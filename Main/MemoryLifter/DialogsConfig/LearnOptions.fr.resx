<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LTeachers.Text">
    <value>Les "enseignants" sont des ensembles prédéfinis pour tous les paramètres de ces onglets. Ils vous permettent de tout définir rapidement selon vos souhaits.</value>
  </data>
  <data name="labelTeacherLoadingError.Text">
    <value>Erreur de chargement de l'enseignant</value>
  </data>
  <data name="GBTeacher.Text">
    <value>Enseignants</value>
  </data>
  <data name="TSTeachers.HelpKeyword">
    <value>/html/Teachers.htm</value>
  </data>
  <data name="TSTeachers.Text">
    <value>Enseignants</value>
  </data>
  <data name="TSLearning.Text">
    <value>Mode d'apprentissage</value>
  </data>
  <data name="labelTextInfo.Text">
    <value>Uniquement adapté en mode de saisie.</value>
  </data>
  <data name="RGSynonym3.Text">
    <value>Promouvoir si premier mot connu</value>
  </data>
  <data name="RGSynonym4.Text">
    <value>Inviter si &lt; 100%</value>
  </data>
  <data name="RGSynonym2.Text">
    <value>Promouvoir si une carte connue</value>
  </data>
  <data name="RGSynonym1.Text">
    <value>Promouvoir si &gt;= 50% connues</value>
  </data>
  <data name="RGSynonym0.Text">
    <value>Promouvoir si 100% connues</value>
  </data>
  <data name="GBSynonyms.Text">
    <value>Comment souhaitez-vous trier les synonymes ?</value>
  </data>
  <data name="TSSynonyms.Text">
    <value>Synonymes</value>
  </data>
  <data name="LIgnore.Text">
    <value>Ignorer ces caractères pendant la correction :</value>
  </data>
  <data name="CBSelfAssessment.Text">
    <value>Auto-évaluation</value>
  </data>
  <data name="CBCase.Text">
    <value>Sensibilité à la casse</value>
  </data>
  <data name="CBCorrect.Text">
    <value>Corriger à la volée</value>
  </data>
  <data name="RGTyping3.Text">
    <value>Inviter</value>
  </data>
  <data name="RGTyping2.Text">
    <value>Toujours promouvoir</value>
  </data>
  <data name="RGTyping1.Text">
    <value>Promouvoir si &gt; 50%</value>
  </data>
  <data name="RGTyping0.Text">
    <value>Promouvoir uniquement si aucune</value>
  </data>
  <data name="GBTyping.Text">
    <value>Erreurs typographiques</value>
  </data>
  <data name="TSTyping.Text">
    <value>Saisie</value>
  </data>
  <data name="LblMin.Text">
    <value>mn</value>
  </data>
  <data name="LblTo.Text">
    <value>à</value>
  </data>
  <data name="CBQuit.Text">
    <value>Quitter MemoryLifter</value>
  </data>
  <data name="CBSnooze.Text">
    <value>Réduction et affichage contextuel toutes les</value>
  </data>
  <data name="CBRights.Text">
    <value>Après un certain nombre de bonnes réponses :</value>
  </data>
  <data name="CBCards.Text">
    <value>Après un certain nombre des cartes :</value>
  </data>
  <data name="CBTime.Text">
    <value>Après un délai spécifique (en mn) :</value>
  </data>
  <data name="GBEndSession.Text">
    <value>Fin de la session d'apprentissage</value>
  </data>
  <data name="TSPlanning.Text">
    <value>Réduire/Quitter le planificateur</value>
  </data>
  <data name="checkBoxCheckForBetaUpdates.Text">
    <value>Vérifiez s'il y a des mises à jour bêta</value>
  </data>
  <data name="checkBoxUseDictionaryStylesheets.Text">
    <value>Utiliser les styles du module d'apprentissage</value>
  </data>
  <data name="checkBoxStartExitSound.Text">
    <value>Lecture audio au démarrage/à l'arrêt</value>
  </data>
  <data name="checkBoxOneInstance.Text">
    <value>N'autoriser qu'une seule instance de MemoryLifter</value>
  </data>
  <data name="CBGeneral3.Text">
    <value>Fichiers média à lecture automatique</value>
  </data>
  <data name="CBGeneral2.Text">
    <value>Afficher les images</value>
  </data>
  <data name="CBGeneral1.Text">
    <value>Afficher les statistiques</value>
  </data>
  <data name="CBGeneral0.Text">
    <value>Horloge de temporisation</value>
  </data>
  <data name="CBGeneral7.Text">
    <value>Valider la rétrogradation</value>
  </data>
  <data name="CBGeneral6.Text">
    <value>Pool aléatoire</value>
  </data>
  <data name="CBGeneral5.Text">
    <value>Ignorer l'affichage des réponses correctes</value>
  </data>
  <data name="CBGeneral4.Text">
    <value>Ecouter le commentaire audio</value>
  </data>
  <data name="GBGeneral.Text">
    <value>Général</value>
  </data>
  <data name="TSGeneral.Text">
    <value>Général</value>
  </data>
  <data name="btnOkay.Text">
    <value>OK</value>
  </data>
  <data name="btnCancel.Text">
    <value>Annuler</value>
  </data>
  <data name="$this.HelpKeyword">
    <value>/html/memo1d9v.htm</value>
  </data>
  <data name="$this.Text">
    <value>Options d'apprentissage</value>
  </data>
</root>