//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.239.
// 
#pragma warning disable 1591

namespace MLifter.DAL.LearningModulesService {
	using System;
	using System.Web.Services;
	using System.Diagnostics;
	using System.Web.Services.Protocols;
	using System.ComponentModel;
	using System.Xml.Serialization;
	using System.Data;
	
	
	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Web.Services.WebServiceBindingAttribute(Name="MLifterLearningModulesServiceSoap", Namespace="http://www.memorylifter.com/sync/learningmodules/")]
	public partial class MLifterLearningModulesService : System.Web.Services.Protocols.SoapHttpClientProtocol {
		
		private System.Threading.SendOrPostCallback LoginOperationCompleted;
		
		private System.Threading.SendOrPostCallback GetUserListOperationCompleted;
		
		private System.Threading.SendOrPostCallback GetLearningModulesListOperationCompleted;
		
		private System.Threading.SendOrPostCallback getClientPwdOperationCompleted;
		
		private System.Threading.SendOrPostCallback GetLearningModuleIndexEntryOperationCompleted;
		
		private bool useDefaultCredentialsSetExplicitly;
		
		/// <remarks/>
		public MLifterLearningModulesService() {
			this.Url = global::MLifter.DAL.Properties.Settings.Default.MLifterDAL_LearningModulesService_MLifterLearningModulesService;
			if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
				this.UseDefaultCredentials = true;
				this.useDefaultCredentialsSetExplicitly = false;
			}
			else {
				this.useDefaultCredentialsSetExplicitly = true;
			}
		}
		
		public new string Url {
			get {
				return base.Url;
			}
			set {
				if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
							&& (this.useDefaultCredentialsSetExplicitly == false)) 
							&& (this.IsLocalFileSystemWebService(value) == false))) {
					base.UseDefaultCredentials = false;
				}
				base.Url = value;
			}
		}
		
		public new bool UseDefaultCredentials {
			get {
				return base.UseDefaultCredentials;
			}
			set {
				base.UseDefaultCredentials = value;
				this.useDefaultCredentialsSetExplicitly = true;
			}
		}
		
		/// <remarks/>
		public event LoginCompletedEventHandler LoginCompleted;
		
		/// <remarks/>
		public event GetUserListCompletedEventHandler GetUserListCompleted;
		
		/// <remarks/>
		public event GetLearningModulesListCompletedEventHandler GetLearningModulesListCompleted;
		
		/// <remarks/>
		public event getClientPwdCompletedEventHandler getClientPwdCompleted;
		
		/// <remarks/>
		public event GetLearningModuleIndexEntryCompletedEventHandler GetLearningModuleIndexEntryCompleted;
		
		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.memorylifter.com/sync/learningmodules/Login", RequestNamespace="http://www.memorylifter.com/sync/learningmodules/", ResponseNamespace="http://www.memorylifter.com/sync/learningmodules/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public int Login(string username, string password) {
			object[] results = this.Invoke("Login", new object[] {
						username,
						password});
			return ((int)(results[0]));
		}
		
		/// <remarks/>
		public void LoginAsync(string username, string password) {
			this.LoginAsync(username, password, null);
		}
		
		/// <remarks/>
		public void LoginAsync(string username, string password, object userState) {
			if ((this.LoginOperationCompleted == null)) {
				this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
			}
			this.InvokeAsync("Login", new object[] {
						username,
						password}, this.LoginOperationCompleted, userState);
		}
		
		private void OnLoginOperationCompleted(object arg) {
			if ((this.LoginCompleted != null)) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}
		
		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.memorylifter.com/sync/learningmodules/GetUserList", RequestNamespace="http://www.memorylifter.com/sync/learningmodules/", ResponseNamespace="http://www.memorylifter.com/sync/learningmodules/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public SerializableDictionary<string, UserAuthenticationTyp> GetUserList()
		{
			object[] results = this.Invoke("GetUserList", new object[0]);
			return ((SerializableDictionary<string, UserAuthenticationTyp>)(results[0]));
		}
		
		/// <remarks/>
		public void GetUserListAsync() {
			this.GetUserListAsync(null);
		}
		
		/// <remarks/>
		public void GetUserListAsync(object userState) {
			if ((this.GetUserListOperationCompleted == null)) {
				this.GetUserListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserListOperationCompleted);
			}
			this.InvokeAsync("GetUserList", new object[0], this.GetUserListOperationCompleted, userState);
		}
		
		private void OnGetUserListOperationCompleted(object arg) {
			if ((this.GetUserListCompleted != null)) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.GetUserListCompleted(this, new GetUserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}
		
		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.memorylifter.com/sync/learningmodules/GetLearningModulesList", RequestNamespace="http://www.memorylifter.com/sync/learningmodules/", ResponseNamespace="http://www.memorylifter.com/sync/learningmodules/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public SerializableDictionary<int, string> GetLearningModulesList()
		{
			object[] results = this.Invoke("GetLearningModulesList", new object[0]);
			return ((SerializableDictionary<int, string>)(results[0]));
		}
		
		/// <remarks/>
		public void GetLearningModulesListAsync() {
			this.GetLearningModulesListAsync(null);
		}
		
		/// <remarks/>
		public void GetLearningModulesListAsync(object userState) {
			if ((this.GetLearningModulesListOperationCompleted == null)) {
				this.GetLearningModulesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLearningModulesListOperationCompleted);
			}
			this.InvokeAsync("GetLearningModulesList", new object[0], this.GetLearningModulesListOperationCompleted, userState);
		}
		
		private void OnGetLearningModulesListOperationCompleted(object arg) {
			if ((this.GetLearningModulesListCompleted != null)) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.GetLearningModulesListCompleted(this, new GetLearningModulesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}
		
		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.memorylifter.com/sync/learningmodules/getClientPwd", RequestNamespace="http://www.memorylifter.com/sync/learningmodules/", ResponseNamespace="http://www.memorylifter.com/sync/learningmodules/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public string getClientPwd(int lmid, string clientId) {
			object[] results = this.Invoke("getClientPwd", new object[] {
						lmid,
						clientId});
			return ((string)(results[0]));
		}
		
		/// <remarks/>
		public void getClientPwdAsync(int lmid, string clientId) {
			this.getClientPwdAsync(lmid, clientId, null);
		}
		
		/// <remarks/>
		public void getClientPwdAsync(int lmid, string clientId, object userState) {
			if ((this.getClientPwdOperationCompleted == null)) {
				this.getClientPwdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClientPwdOperationCompleted);
			}
			this.InvokeAsync("getClientPwd", new object[] {
						lmid,
						clientId}, this.getClientPwdOperationCompleted, userState);
		}
		
		private void OngetClientPwdOperationCompleted(object arg) {
			if ((this.getClientPwdCompleted != null)) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.getClientPwdCompleted(this, new getClientPwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}
		
		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.memorylifter.com/sync/learningmodules/GetLearningModuleIndexEntry", RequestNamespace="http://www.memorylifter.com/sync/learningmodules/", ResponseNamespace="http://www.memorylifter.com/sync/learningmodules/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
		public byte[] GetLearningModuleIndexEntry(int learningModuleId, string clientId) {
			object[] results = this.Invoke("GetLearningModuleIndexEntry", new object[] {
						learningModuleId,
						clientId});
			return ((byte[])(results[0]));
		}
		
		/// <remarks/>
		public void GetLearningModuleIndexEntryAsync(int learningModuleId, string clientId) {
			this.GetLearningModuleIndexEntryAsync(learningModuleId, clientId, null);
		}
		
		/// <remarks/>
		public void GetLearningModuleIndexEntryAsync(int learningModuleId, string clientId, object userState) {
			if ((this.GetLearningModuleIndexEntryOperationCompleted == null)) {
				this.GetLearningModuleIndexEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLearningModuleIndexEntryOperationCompleted);
			}
			this.InvokeAsync("GetLearningModuleIndexEntry", new object[] {
						learningModuleId,
						clientId}, this.GetLearningModuleIndexEntryOperationCompleted, userState);
		}
		
		private void OnGetLearningModuleIndexEntryOperationCompleted(object arg) {
			if ((this.GetLearningModuleIndexEntryCompleted != null)) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
				this.GetLearningModuleIndexEntryCompleted(this, new GetLearningModuleIndexEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
			}
		}
		
		/// <remarks/>
		public new void CancelAsync(object userState) {
			base.CancelAsync(userState);
		}
		
		private bool IsLocalFileSystemWebService(string url) {
			if (((url == null) 
						|| (url == string.Empty))) {
				return false;
			}
			System.Uri wsUri = new System.Uri(url);
			if (((wsUri.Port >= 1024) 
						&& (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
				return true;
			}
			return false;
		}
	}
	
	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
	public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
	
	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
		
		private object[] results;
		
		internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
				base(exception, cancelled, userState) {
			this.results = results;
		}
		
		/// <remarks/>
		public int Result {
			get {
				this.RaiseExceptionIfNecessary();
				return ((int)(this.results[0]));
			}
		}
	}
	
	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
	public delegate void GetUserListCompletedEventHandler(object sender, GetUserListCompletedEventArgs e);
	
	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetUserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
		
		private object[] results;
		
		internal GetUserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
				base(exception, cancelled, userState) {
			this.results = results;
		}
		
		/// <remarks/>
		public System.Data.DataSet Result {
			get {
				this.RaiseExceptionIfNecessary();
				return ((System.Data.DataSet)(this.results[0]));
			}
		}
	}
	
	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
	public delegate void GetLearningModulesListCompletedEventHandler(object sender, GetLearningModulesListCompletedEventArgs e);
	
	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetLearningModulesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
		
		private object[] results;
		
		internal GetLearningModulesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
				base(exception, cancelled, userState) {
			this.results = results;
		}
		
		/// <remarks/>
		public System.Data.DataSet Result {
			get {
				this.RaiseExceptionIfNecessary();
				return ((System.Data.DataSet)(this.results[0]));
			}
		}
	}
	
	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
	public delegate void getClientPwdCompletedEventHandler(object sender, getClientPwdCompletedEventArgs e);
	
	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class getClientPwdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
		
		private object[] results;
		
		internal getClientPwdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
				base(exception, cancelled, userState) {
			this.results = results;
		}
		
		/// <remarks/>
		public string Result {
			get {
				this.RaiseExceptionIfNecessary();
				return ((string)(this.results[0]));
			}
		}
	}
	
	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
	public delegate void GetLearningModuleIndexEntryCompletedEventHandler(object sender, GetLearningModuleIndexEntryCompletedEventArgs e);
	
	/// <remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetLearningModuleIndexEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
		
		private object[] results;
		
		internal GetLearningModuleIndexEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
				base(exception, cancelled, userState) {
			this.results = results;
		}
		
		/// <remarks/>
		public byte[] Result {
			get {
				this.RaiseExceptionIfNecessary();
				return ((byte[])(this.results[0]));
			}
		}
	}
}

#pragma warning restore 1591