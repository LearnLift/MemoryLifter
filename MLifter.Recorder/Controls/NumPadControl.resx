<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxSimpleView.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAWRXhpZgAASUkqAAgAAAAAAAAAAAD/2wBDAAgGBgcGBQgHBwcJ
        CQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJ
        CQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjL/wAARCAGQAZADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+iiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        G/xdqWkPBJrmvEXjjRPDu9Lm5826X/l2gwz9uvIC8HI3EZ7ZqZSUVduxpRoVK0+Smm2dL1qGe4itY3ln
        kWOJF3OzHAUDufavF9V+Les3aFNPt4LBSMFs+a4IPUEgDHbBU9zn04W7vbu/mE17dT3MirtDzuXIGc4B
        JOBk1x1MdCPw6n0uE4VxVXWs1Bfez3zUfiJ4Z07cG1NJ3WPcEtlMu7rwCPlzx0JHUZ7Vzt58ZNPSP/Qt
        LuZpN3KzssYx6gjdnt/jXjp60lcssdUeyse9Q4TwcP4jcv68j028+Ml/JHix0q3hfP3ppTICPTA24PTu
        foapH4v+Ic/8e2nf9+n/APi68/orJ4us/tHdHh/Loqyp/megf8Lf8RD/AJd9O/79P/8AF1o2vxou0gUX
        WjQzTc7njnMannjClWxx7mvLqKFi6y+0EuH8uno6a+9r9T2W2+MmlvCpu9NvI5T95Itsijn1JXP5V09j
        498M32/y9Xt0KAZE7eV19N2M9D0/qK+c6K1jj6i+JXPPr8J4Oa/dtxf3r+vmfV6uGHDA08jivlrTtW1D
        SZvN0+8ntn3Kx8tyAxHTI6Ecng5HJ9a73SPi/qFvsj1SyjukAVfNhbY/HUkHgk/8BGf06qeOhL4tDwcX
        wti6OtJ86+5/18z2cdKUGuf0DxXpHiOINY3SmQLloH+WROBnKn0yBkcc9a316DnNdsZKSuj5udKdKThU
        VmhR0paQdKWmQFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFF
        FABRRRQAUUUUAIawfEPivSfDkRN9dKsxXckCfNI/B6L6cEZOBnvWD45+IMPhxvsNgsdxqRwWD8pEOvzY
        PJPYds59AfEb69udRvZry8nee4lbc8j9Sf6D0HYcVxYjFqn7sdz6TKOHqmMtVre7D8WdT4h+I+ta4yJB
        I2n26tuCW8pDnjHzOMZHXjAHPcjNceetJRXlTqSm7yZ+gYXBUMLHloxSCiiisztCiiigAooooAKKKKAC
        iiigAooooAfFK8EiTROUkjbcjqcFSOcj36flXdeGfidqejqttqYfULQN99n/AHygkZ+Y8NjnAODz94DA
        rgqK1p1Z03eLPPxmAw+Ljy1o3/M+nNG8QaZr0DS6beRzqvLAZDLyQMqcEZwcZ9K1Vzgc18vaNrF7oWpR
        39hKY5k4PdXXjKsO4P4e2CAa9z8GeNbbxTZ+W4WHU4lHnwA8MP7ye3t1HQ9QT6uHxSqaPc/Ps3yGpgX7
        SnrDv1Xr/mdgKKRRhQKWuw+fCiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoo
        ooAKKKKAE70UU1uCTzQA2RgvU4rybxn8Tmk+06XoZx/yze+R/wAGEf8A8Xn1IHQ1N8SvG8Jgn8P6a3mS
        N8l1MrYCj/nmuOpP8XbHHfjyWvOxWKafJBn2fD+QxqRWJxMdOif5ifyoooryj71LQKKKKBhRRRQAUUUU
        AFFFFABRRRQAUUUUAFFFFABRRRQAVJFI8MiSxuySIdyOrEFT2II5H4cjio6KabTujOcVJNM9n8EfElNU
        nh0vWAsV2yhI7jOFmb3GAFJ4x2JyBjgH0leg9O1fKHHcZr2/4e+OY9atYtIv5CupQoFVmYn7QoGM5Jzu
        wMn8xnnHq4TE83uT3Pz/AD/IlQ/2jDR93qu3n6fkehDpS0i/dFLXoHyQUUUUAFFFFABRRRQAUUUUAFFF
        FABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFACGuH+IfjRvDVolpYlTqNypKscHyF/vFfUngZ4yCTnGD0fi
        LWItC0W61GYblhTIXn5m6KOAcZJAzjjNfNmpahcatqVxf3T7pp3LsckgZ6AZJ4AwAOwArjxdd048sd2f
        RcP5T9dq+0qL3I/i+3+ZXlkklleSV2eR2LM7nJYk8kn1ptFFeK3d3P02KSSSCiiigoKKKKACiiigAooo
        oAKKKKACiiigAooooAKKKKACiiigAooooAKsWV7c6feRXlnM0NxC25HXt/8Ar5+vQ8Gq9FNOzuZVKcak
        XGS0e59EeCvFa+KtI85lWK8hIS4jDDg4yGAzkA84z6Ec4zXUL24r5l8O67ceHNag1K3XeUyHi3ECRT1U
        4P4jOcEDivpOyu4b+xt7y3k3wzRrJG2CMqRkHB6cV7eFr+1jruj8vz3K/qNe8Pglt5eRaopB0pa6jwwo
        oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigBCeaYeM9aeaxPFWtf2B4cvdSCFniT92NuR
        uJAGRkcZIzz0zSlJRTbLp05VJqEd27I8n+KXiP8AtTW10u3kzbWWQ+G4aU9T1IOBx0BB3DvXAHrT5JJJ
        pnkldnkdizOzZLE9ST3+tMr5+rUdSbkfr2X4OGDw8aUen5hRRRWR3oKKKKBhRRRQAUUUUAFFFFABRRRQ
        AUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAV6t8IvEIVp9AuZODma13N3/AIlGT/wIAD++a8pq3puoXGla
        jb39o22eCQOvJGSOxxg4PQjPIJHQ1vh6ns5qR5Wb4JYzCypdd16n1OvSlqnpd9HqelWt9CrLHcRLKoYY
        IDAEZ/Orle8ndXR+SSTi2mFFFFMQUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFADWOK8j+MWs
        7prLRlXhf9KkYj6qoHP+9nj0561625Azkdq+bvG19/aHjTVp9mzE5ixnP3AEz+O3P41yYyfLTt3PoeGc
        Kq2N53tFX+ZgHrRRRXiH6gFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQ
        AUUUUAFFFFAHtfwi1f7Z4fm0xlw9i+VIHBRyxHfrnf2HGK9GHQV4H8LL02njaGLZu+1QyQ53Y24G/P8A
        45j/APVXvle7hJ81JeR+U8RYVYfHzttLX79/xHUUCiuk8QKKKKACiiigAooooAKKKKACiiigAooooAKK
        KKACiiigChrN9/ZujXt7s3/Z4Hl2Zxu2qTjNfLf+eua+h/iPcS23gXU5IX2sVWMnAPyswVuvqCRXzwet
        eVmEveUT77g+lajUq92l93/DhRRRXnH2YUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQ
        AUUUUAFFFFABRRRQAUUUUAWtNvP7O1S0vgm/7NMk2zON205xmvqZTlR9K+T/AOE8V9PeHLqW98NaZczv
        vmltY3dwANzFQSePevTy9/Ej4TjCl71Kp6r8rfqag6UtIBgUtemfEoKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigDz34v3MsPhSKONsJNdIkgwDuXDNjn3VT+FeHGvbPjJ/yLFn/ANfq/wDoD14nXj4/
        +L8j9J4TSWB+bCiiiuE+oCiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
        KKKKACiiigBe3+ea+iPhzcSXPgPTHlbcyq8YOAPlV2VensBXztX0J8Mf+Sf6b9Zf/RrV35f8b9D5Hi+K
        +qQf979GdfRRRXrn54FFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQB598XraWfwnFLGuUguke
        U5A2qQy5592UfjXhpr6I+I1vLc+BdUjhXcwRZCMgfKrqzdfQAmvnc15GPX71M/ROEqnNg5R7S/RBRRRX
        AfWhRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAvb/ADxX
        0R8OreW28B6XHMu1mV5AMg/Kzsy9PYivnbtya+nvDltLZ+GtLtp02TRWsaSLkHawUAjj3r0cuXvNnxnG
        FS1GnT7tv7l/wTVooor1T4EKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigDP1mx/tLRr2x37P
        tELxbsZ27hjOK+XP89MV9YPwDn0r5u8bWP8AZ3jTVrffvzOZc4x98B8fhux+FedmENFI+y4QxFqtSg+q
        v93/AA5gUUUV5R9+gooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        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
        QQUUUUDCiiigAooooAKKu6dpOoatN5Wn2c9w+VU+WhIUnOMnoBx1OBwfSu+0j4QahcbJdVvorVCFbyoV
        3vz1BJ4Uj/gQz+u1OhOp8KPMxea4TCfxZ69t39x5vFFJPIkMSM8kjbURRksTxgcden513Xhn4YanrAW5
        1Ivp9qW+46HzmAIz8p4XPPJyePukYNeraB4T0jw5EFsLRVlK4adzukfgZyT64BwOK3V6c16NHAxWtTU+
        OzDiqrUvDDLlXd7mXo3h/TNBtzDptnHAp+8QMs/JIyxyTjJxn1rWH3aO1Fd6SSsj5Sc5VJc0ndsUUUUU
        EhRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFF
        ABRRRQAmKguLaG5jeKaNXjdSrqyghgex9qn70n0NFrgnZ3Ryeo/DzwzqO4tpiQyNHsD2zGLb15Cj5c89
        SD2z2rnbz4N6e8f+hapcwybslp1WQY9ABtx/nivT6KxlQpy3R6FHNcbQ/h1H+f5nj1z8GbtIHNrrEMso
        +6ksBRTz3IJ7Z7H8Kzv+FQeIv+fnTj/20f8A+Jr3HJ9KWs3g6PY7o8S5jHed/kjwz/hUPiL/AJ+NO6d5
        X/L7lasXwXnaJTLriI5A3KtqWAPfB3jP6V66etLgUfU6K6ClxLmL2ml8l/keZW3wb0tIVF3qV5JKMlni
        2xqRn0IbH5101j4D8M2Jfy9It3LgAmceb09A2cdT0/oK6egVrGhTjsjgrZnjK+lSo/v/AEERVCjCgfhT
        qKK1OEKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooA//2Q==
</value>
  </data>
</root>